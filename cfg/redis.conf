# Redis configuration file example

# Bind to a specific IP (default is to listen on all interfaces)
# Setting this to 127.0.0.1 makes Redis listen only on the local machine.
# You can specify multiple IPs separated by spaces.
#bind 127.0.0.1

# Protected mode: If set to 'yes', Redis only replies to queries from the loopback
# interfaces and replies to other clients connecting from other addresses with an
# error, asking for explicit read/write permissions using 'AUTH'.
#protected-mode yes

# Specify the port Redis should listen on.
port 6379

# Specify the path for the Unix socket that will be used to listen for incoming connections.
# unixsocket /var/run/redis/redis.sock
# unixsocketperm 700

# Set the number of databases.
databases 16

# Configure persistence options

# Save the dataset to disk:
#   save <seconds> <changes>
# Save the dataset every 900 sec (15 min) if at least 1 key changed.
#save 900 1
# Save the dataset every 300 sec (5 min) if at least 10 keys changed.
#save 300 10
# Save the dataset every 60 sec if at least 10000 keys changed.
#save 60 10000

# To disable persistence, comment out all "save" lines.
# It's strongly advised to have some sort of persistence enabled.

# Set the filename where to dump the DB
dbfilename dump.rdb

# Set the working directory for relative paths in the config file and where the
# dump.rdb file will be stored.
#dir ./logs/redisLogs

# Set the log level (debug, notice, warning, error)
#loglevel notice

# Specify the log file name. Also, 'stdout' can be used to force Redis to log
# on the standard output. Note that if you use standard output for logging
# but background the server, logs will be lost.
#logfile "/var/log/redis/redis-server.log"

# Set the max memory to use for Redis data (useful on systems with limited memory)
maxmemory 50000000
# maxmemory-policy noeviction

# Require clients to issue AUTH <PASSWORD> before processing any other commands
# requirepass foobared
